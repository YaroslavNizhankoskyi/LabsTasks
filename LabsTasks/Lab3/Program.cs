
//Варіанти завдань для лабораторної роботи № 3
//Завдання передбачають такі дії :
//Завдання 1, 2 передбачають розробку класу, що містить закриті поля та відкриті методи;
//Завдання 3, 4 передбачають розробку конструкторів за замовчування та з параметрами;
//Завдання 5 –  розробка властивостей get, set для доступу до закритих полів класу;
//Завдання 6 – розробка методів виведення на консоль значень полів класу
//Завдання 7 – розробка методів за сценарієм роботи програми з використанням текстових файлів для збереження результатів роботи програми;
//Завдання 8 – доповнення класів вбудованими (вкладеними класами). Рекомендується у вигляді другої версії лабораторної роботи.
//Завдання 9 – доповнення попередньої версії програми частковими класами та методами. Зробити у вигляді третьої версії лабораторної роботи
//Завдання 10 – доповнення попередньої версії новим статичним класом.
//В методі Main() класу Program продемонструвати виклик усіх методів усіх класів. Усі значення, що розраховуються, записувати до текстових файлів.
//Студент має право додати додаткові поля та методи в класи завдань свого варіанту. Номер варіанта визначається за порядковим номером в журналі.

//Розробити консольний застосунок мовою C# для обробки даних про студента та його індивідуальну освітню траєкторію. 
//1.	Створити класи: Student та Curiculum (індивідуальний навчальний план). Рекомендується кожний клас створювати в окремому файлі командою Project → Add class

//2.    Визначити в класах закриті поля:
//•	клас Student: FirstName, LastName, рік навчання(курс), група, рейтинг, стипендія; 
//•	клас Curiculum: назва освітньої програми (ОП), обсяг в годинах освітньої програми, кількість дисциплін ОП, .

//3.	Визначити в класах конструктори без параметрів для ініціалізації полів класів нульовими та пустими (для типу string) значеннями.

//4.    Визначити в класах конструктори з параметрами для ініціалізації полів класів початковими значеннями. 

//5.	Визначити в класах відкриті властивості (get, set) для доступу до закритих полів та зміни значень ініціалізованих в конструкторах полів класів.

//6.	Визначити в класах відкриті методи для введення з консолі, виведення на консоль значень ініціалізованих полів класу та запис значень до текстового файлу.

//7.	Визначити в класах відкриті методи для роботи з об’єктами:
//•	клас Student:
//•	Визначення рейтингу студента як середній бал в сесії за 10 дисциплінами. Оцінки студента генерувати псевдовипадкоми цілими числами в діапазоні від 40 до 100. 
//•	Розрахунок розміру стипендії, якщо рейтинг студента більше 80 балів. Розмір стипендії підвищується для відмінників. 

//•	клас Curiculum: 
//•	запис у текстовий файл значень полів класу (назва освітньої програми (ОП), обсяг в годинах освітньої програми, кількість дисциплін ОП);
//•	Визначення якості освітньої програми за критеріями НАЗЯВО:  

//8.    Додати до класу Student вбудований (вкладений) клас WorkInCompany(Робота в компанії) з полями: 
//•	Назва компанії
//•	Кількість проектів, які виконує студент на роботі;
//•	Обсяг освітньої програми, яка корелюється (збігається за змістом) з профілем роботи студента.та методами:
//•	Розрахунок обсягу ОП, який можна зарахувати студенту як результат його ироботи в компанії в процесі виконання виробничих проектів;
//•	Формування рекомендацій щодо удосконалення індивідуального навчального плану класу Curiculum для наближення його до профіля роботи студента.  

//9.	Модифікувати клас WorkInCompany, подавши його як частковий, тобто поділивши його на дві частини: в одну частину (окремий файл) включити метод розрахунок обсягу ОП, в іншу (інший файл) – метод Формування рекомендацій до зміни змісту ОП.

//10.	Додати до проекту новий статичний клас IndividWork (індивідуальна робота), включивши в нього три функції (на вибір студента) з варіанта 7 лабораторної роботи 2. 


namespace Console_Lab3
{
    internal class Program
    {
        static void Main(string[] args)
        {
            //Іванець Поліна ІПЗ-12_2

            Student aaa = new Student();
/*            aaa.Enter();
            aaa.DefineRating();*/

            //char key;
            //do
            //{


            //    Console.WriteLine("\nContinue y(0)/n(1)");
            //    key = (char)Convert.ToInt32(Console.ReadLine());
            //} while (key != 1);

        }
        


    }
}